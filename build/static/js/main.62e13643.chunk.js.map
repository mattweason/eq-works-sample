{"version":3,"sources":["views/Components/LineChart.js","views/Components/MapCircle.js","views/Components/Map.js","views/Components/Table.js","App.js","index.js"],"names":["lineColors","impressions","clicks","revenue","events","LineChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chartReference","React","createRef","state","data","datasets","labels","_this2","stats","fetch","then","res","text","packageData","JSON","parse","catch","err","callAPI","_","map","element","item","findWhere","date","extend","pluck","i","length","moment","format","keys","metrics","filter","partial","contains","dataset","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","push","setState","react_default","a","createElement","es","ref","Component","MapCircle","size","color","metricValue","metricProp","className","style","width","height","borderRadius","border","left","top","metricProps","metricPropsColors","metricRatios","filteredMetrics","googleMapsRef","googleMapRef","markerCluster","POIMap","handleCheckbox","metric","event","metricsBoolCopy","stringify","metricsBool","target","checked","renderEventMarkers","handleDateChange","selectedDate","filterMetrics","packageMetrics","mapCircleElements","dateRange","script","document","src","async","body","appendChild","uniq","maps","clearMarkers","locations","getEventMarkers","markers","location","Marker","position","MarkerClusterer","imagePath","gridSize","minimumClusterSize","c","lat","lng","isSame","hasOwnProperty","name","bundleMapCircleElements","calculateMetricRatios","place","entry","views_Components_MapCircle","key","calculateCircleSize","metricMax","max","Math","PI","pow","value","sqrt","_this3","lib_default","bootstrapURLKeys","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","_ref","handleApiLoaded","defaultCenter","center","defaultZoom","zoom","options","otherOptions","renderMapCircles","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","disableToolbar","variant","minDate","add","maxDate","margin","id","onChange","KeyboardButtonProps","aria-label","FormGroup","row","FormControlLabel","control","Checkbox","defaultProps","minZoom","maxZoom","TableContainer","tableData","columns","rows","toUpperCase","field","sort","mdbreact_esm","striped","bordered","small","App","poiStatsDaily","Components_LineChart","Components_Map","Table_TableContainer","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.62e13643.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport _ from \"underscore\";\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst lineColors = {\r\n    impressions: '#FF6384',\r\n    clicks: '#4BC0C0',\r\n    revenue: '#FFCE56',\r\n    events: '#E7E9ED'\r\n}\r\n\r\nclass LineChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartReference = React.createRef();\r\n\r\n        this.state = { data: { datasets:[], labels:[] } };\r\n    }\r\n\r\n    callAPI() {\r\n        let stats = [];\r\n        let events = [];\r\n        fetch(\"/stats/daily\")\r\n            .then(res => res.text())\r\n            .then(res => {\r\n                stats = res;\r\n\r\n                return fetch('/events/daily'); // make a 2nd request and return a promise\r\n            })\r\n            .then(res => res.text())\r\n            .then(res => {\r\n                events = res;\r\n\r\n                this.packageData(JSON.parse(stats), JSON.parse(events));\r\n            })\r\n            .catch(err => err);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callAPI();\r\n    }\r\n\r\n    packageData(stats, events) {\r\n        let data = _.map(stats, (element) => {\r\n            let item = _.findWhere(events, { date: element.date });\r\n\r\n            return _.extend(element, item);\r\n        });\r\n\r\n        let labels = _.pluck(data, \"date\");\r\n        for(let i = 0; i < labels.length; i++){\r\n            labels[i] = moment(labels[i]).format('dddd');\r\n        }\r\n\r\n        let datasets = [];\r\n\r\n        const keys = Object.keys(data[0]);\r\n        const metrics = _.filter(keys, _.partial(_.contains, this.props.metrics))\r\n\r\n        for (let i = 0; i < metrics.length; i++) { //Skip 'date' which is first key\r\n            const dataset = {\r\n                label: metrics[i],\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: lineColors[metrics[i]],\r\n                borderColor: lineColors[metrics[i]],\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: lineColors[metrics[i]],\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: lineColors[metrics[i]],\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data:  _.pluck(data, metrics[i])\r\n            };\r\n            datasets.push(dataset);\r\n        }\r\n\r\n        this.setState({ data: { datasets: datasets, labels: labels }})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Line ref={this.chartReference} data={this.state.data} />\r\n            )\r\n    }\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport './MapCircle.css';\r\n\r\nconst MapCircle = (props) => {\r\n    const { size, color, metricValue, metricProp } = props;\r\n    return (\r\n        <div className=\"map-circle\"\r\n             style={{ backgroundColor: 'rgba('+color+',0.5)', width: size+'px', height: size+'px', borderRadius: size/2+'px', border: '1px solid rgb('+color+')'}}\r\n        >\r\n            <div className=\"value\" style={{left: size+'px', top: (size/2)-10+'px'}}>{metricProp}: {metricValue}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapCircle;","import React from \"react\";\r\nimport _ from 'underscore';\r\nimport moment from 'moment';\r\nimport GoogleMapReact  from 'google-map-react';\r\nimport MarkerClusterer from '@google/markerclusterer';\r\nimport MapCircle from './MapCircle'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport './Map.css'\r\n\r\nlet metricProps = ['impressions', 'clicks', 'revenue'];\r\nlet metricPropsColors = ['255,0,0','0,255,0','0,0,255'];\r\nlet maxRadius = 100; //Max circle radius for poi metrics on map\r\nlet metricRatios = {}; //For relating data value to circle size on the map\r\nlet filteredMetrics = '' //Stores all the metric poi data filtered to the selected date\r\n\r\nlet googleMapsRef = '';\r\nlet googleMapRef = '';\r\nlet markerCluster = '';\r\n\r\n\r\nclass POIMap extends React.Component {\r\n    static defaultProps = {\r\n        center: {\r\n            lat: 43.369765,\r\n            lng: -79.424882\r\n        },\r\n        zoom: 9,\r\n        otherOptions: {\r\n            minZoom: 5,\r\n            maxZoom: 16\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            metrics: '', //All metrics bundled by poi\r\n            mapCircleElements: '', //Bundle of map circle html elements for metric properties\r\n            metricsBool: {\r\n                impressions: false,\r\n                clicks: false,\r\n                revenue: false,\r\n                events: true\r\n            }, //Determines whether or not a metric is displayed on the map\r\n            dateRange: '', //Full date range of available data\r\n            selectedDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const script = document.createElement('script')\r\n        script.src = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js'\r\n        script.async = true\r\n        document.body.appendChild(script)\r\n\r\n        this.setState({dateRange: _.uniq(_.pluck(this.props.data, 'date'))}, () => {\r\n            this.setState({selectedDate: this.state.dateRange[0] }, () => {\r\n                filteredMetrics = this.filterMetrics();\r\n                this.packageMetrics(); //Once component is mounted aggregate metrics for the map circles\r\n            }); //Set default date to first date of available data\r\n        })\r\n\r\n    }\r\n\r\n    handleApiLoaded (map, maps) {\r\n        //Cache map and maps objects\r\n        googleMapsRef = maps;\r\n        googleMapRef = map;\r\n\r\n        this.renderEventMarkers()\r\n    }\r\n\r\n    handleCheckbox = metric => event =>{\r\n        //Cache current metricsBool state\r\n        let metricsBoolCopy = JSON.parse(JSON.stringify(this.state.metricsBool))\r\n        //Make changes to metric\r\n        metricsBoolCopy[metric] = event.target.checked\r\n\r\n        //Update changed state while keeping unchanged states the same\r\n        this.setState({\r\n            metricsBool:metricsBoolCopy\r\n        }, () => {\r\n            //Clear or add walk-in event markers\r\n            if(metric === 'events')\r\n                this.renderEventMarkers();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    renderEventMarkers(){\r\n        if(markerCluster)\r\n            markerCluster.clearMarkers();\r\n\r\n        if(this.state.metricsBool.events){\r\n            let locations = this.getEventMarkers()\r\n            let markers = locations && locations.map((location) => {\r\n                return new googleMapsRef.Marker({position: location})\r\n            })\r\n\r\n            markerCluster = new MarkerClusterer(googleMapRef, markers, {\r\n                imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m',\r\n                gridSize: 10,\r\n                minimumClusterSize: 2\r\n            })\r\n        }\r\n    }\r\n\r\n    getEventMarkers(){\r\n        let locations = [];\r\n\r\n            for(let i = 0; i < filteredMetrics.length; i++){\r\n                let item = filteredMetrics[i];\r\n\r\n                for(let c = 0; c < item.events; c++){\r\n                    locations.push({lat: item.lat, lng: item.lng})\r\n                }\r\n            }\r\n\r\n        return locations;\r\n    }\r\n\r\n    filterMetrics(){\r\n        let date = moment(this.state.selectedDate);\r\n        let filteredData = _.filter(this.props.data, (item) => {\r\n            let itemDate = moment(item.date, 'll')\r\n            return itemDate.isSame(date, 'day')\r\n        })\r\n\r\n        return filteredData;\r\n    }\r\n\r\n    packageMetrics(){\r\n        let metrics = {};\r\n\r\n        for(let i = 0; i < filteredMetrics.length; i++){\r\n            let item = filteredMetrics[i];\r\n\r\n            if(metrics.hasOwnProperty(item.name)){\r\n                for(let c = 0; c < metricProps.length; c++)\r\n                    metrics[item.name][metricProps[c]] += item[metricProps[c]];\r\n            }\r\n            else{\r\n                metrics[item.name] = {\r\n                    lat: item.lat,\r\n                    lng: item.lng\r\n                };\r\n                for(let c = 0; c < metricProps.length; c++)\r\n                    metrics[item.name][metricProps[c]]= item[metricProps[c]];\r\n            }\r\n        }\r\n\r\n        this.bundleMapCircleElements(metrics); //Once we have the data, bundle into map friendly react elements\r\n    }\r\n\r\n    bundleMapCircleElements(metrics){\r\n        this.calculateMetricRatios(metrics);\r\n        let mapCircleElements = {};\r\n\r\n        for(let i = 0; i < metricProps.length; i++){\r\n            mapCircleElements[metricProps[i]] = [];\r\n        }\r\n        for(let place in metrics){\r\n            let entry = metrics[place];\r\n            for(let i = 0; i < metricProps.length; i++){\r\n                mapCircleElements[metricProps[i]].push(<MapCircle metricProp={metricProps[i]} metricValue={entry[metricProps[i]]} key={place} lat={entry.lat} lng={entry.lng} color={metricPropsColors[i]} size={this.calculateCircleSize(entry[metricProps[i]], metricProps[i])} />)\r\n            }\r\n        }\r\n\r\n        this.setState({ mapCircleElements: mapCircleElements });\r\n    }\r\n\r\n\r\n    calculateMetricRatios(metrics){\r\n        for(let i = 0; i < metricProps.length; i++){\r\n            let metricMax = _.max(_.pluck(metrics, metricProps[i]));\r\n\r\n            metricRatios[metricProps[i]] = metricMax / (Math.PI * Math.pow(maxRadius, 2)); //Create scale for current metric property based on max circle radius\r\n        }\r\n    }\r\n\r\n    calculateCircleSize(value, metricProp){ //Determine map circle size for metric props using scale determined in calculateMetricRatios()\r\n        let diameter = Math.sqrt(value/(Math.PI * metricRatios[metricProp])) * 2;\r\n\r\n        return diameter;\r\n    }\r\n\r\n    renderMapCircles(metricProp){\r\n        return this.state.mapCircleElements[metricProp];\r\n    }\r\n\r\n    render\r\n\r\n    handleDateChange = date => {\r\n        this.setState({selectedDate: date}, () => {\r\n            filteredMetrics = this.filterMetrics();\r\n            this.renderEventMarkers()\r\n            this.packageMetrics();\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex-row\">\r\n                <div className=\"map-wrapper\">\r\n                    <GoogleMapReact\r\n                        bootstrapURLKeys={{key: `AIzaSyAIWKGtCqVn94mx_Kpw9jIR97nJB15xvgM`}}\r\n                        yesIWantToUseGoogleMapApiInternals\r\n                        onGoogleApiLoaded={({map, maps}) => this.handleApiLoaded(map, maps)}\r\n                        defaultCenter={this.props.center}\r\n                        defaultZoom={this.props.zoom}\r\n                        options={this.props.otherOptions}\r\n\r\n                    >\r\n\r\n                        { this.state.metricsBool.impressions ? this.renderMapCircles('impressions') : null }\r\n                        { this.state.metricsBool.clicks ? this.renderMapCircles('clicks') : null }\r\n                        { this.state.metricsBool.revenue ? this.renderMapCircles('revenue') : null }\r\n                    </GoogleMapReact>\r\n                </div>\r\n\r\n                <div className=\"checkbox-wrapper\">\r\n                    { this.state.selectedDate ?\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                minDate={moment(this.state.dateRange[0]).add(12, 'hours')}\r\n                                maxDate={moment(this.state.dateRange[this.state.dateRange.length - 1]).add(12, 'hours')}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Date picker inline\"\r\n                                value={moment(this.state.selectedDate).add(12, 'hours')} //Fix for heroku's server time not matching\r\n                                onChange={this.handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    : null }\r\n                    <FormGroup row>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={this.state.metricsBool.impressions} onChange={this.handleCheckbox('impressions')} value=\"impressions\" />\r\n                            }\r\n                            label=\"Impressions\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={this.state.metricsBool.clicks} onChange={this.handleCheckbox('clicks')} value=\"clicks\" />\r\n                            }\r\n                            label=\"Clicks\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={this.state.metricsBool.revenue} onChange={this.handleCheckbox('revenue')} value=\"revenue\" />\r\n                            }\r\n                            label=\"Revenue\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={this.state.metricsBool.events} onChange={this.handleCheckbox('events')} value=\"events\" />\r\n                            }\r\n                            label=\"Walk-In Events\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default POIMap;","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nexport default class TableContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { tableData: { columns: [], rows: [] } }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.packageData(this.props.data)\r\n    }\r\n\r\n    packageData(data){\r\n        //Determine columns\r\n        let columns= [];\r\n        let keys = Object.keys(data[0]);\r\n\r\n        for(let i = 0; i < keys.length; i++){\r\n            columns.push({\r\n                label: keys[i].toUpperCase(),\r\n                field: keys[i],\r\n                sort: 'asc'\r\n            });\r\n        }\r\n\r\n        //Format date\r\n        for(let i = 0; i < data.length; i++){\r\n            data[i].date = moment(data[i].date).format('ll');\r\n        }\r\n\r\n        this.setState( {tableData: {columns: columns, rows: data} })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                small\r\n                data={this.state.tableData}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport LineChart from \"./views/Components/LineChart\"\r\nimport SimpleMap from \"./views/Components/Map\";\r\nimport TableContainer from \"./views/Components/Table\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { poiStatsDaily: \"\" };\r\n    }\r\n\r\n    callAPI() {\r\n        fetch(\"/poi-stats/daily\")\r\n            .then(res => res.text())\r\n            .then(res => {\r\n                this.setState({poiStatsDaily: JSON.parse(res)})\r\n\r\n            })\r\n            .catch(err => err);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callAPI();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"card\">\r\n                    <h2>Impressions/Clicks vs Revenue/Walk-in Events</h2>\r\n                    <p>Click on a metric in the legend to toggle it on and off.</p>\r\n                    <div className=\"chart-container\">\r\n                        <div className=\"line-chart\">\r\n                            <LineChart metrics={['impressions', 'clicks']} />\r\n                        </div>\r\n                        <div className=\"line-chart\">\r\n                            <LineChart metrics={['revenue', 'events']} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <h2>POI Map</h2>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"map-frame\">\r\n                            { this.state.poiStatsDaily ? <SimpleMap data={this.state.poiStatsDaily} /> : null }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"table-frame\">\r\n                        <h2>POI Stats by Day</h2>\r\n                        <div className=\"card-content\">\r\n                            { this.state.poiStatsDaily ? <TableContainer data={this.state.poiStatsDaily} /> : null }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\r\n    'bootstrap-css-only/css/bootstrap.min.css'; import\r\n    'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}